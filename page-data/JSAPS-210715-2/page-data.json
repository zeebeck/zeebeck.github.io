{"componentChunkName":"component---src-templates-blog-post-js","path":"/JSAPS-210715-2/","result":{"data":{"site":{"siteMetadata":{"title":"zeebeck's archive","author":"[Jihun Kim]","siteUrl":"https://zeebeck.github.io","comment":{"disqusShortName":"","utterances":"zeebeck/zeebeck.github.io"}}},"markdownRemark":{"id":"2093d7d0-2c55-5c8d-9780-874954af7005","excerpt":"문제 설명 대문자로 이루어진 영어단어가 입력되면 단어에 포함된 ‘A’를 모두 ’#‘으로 바꾸어 출력하는 프로그램을 작성하세요. 입출력 예 ▣ 입력설명 첫 번째 줄에 문자열이 입력된다. ▣ 출력설명 첫 번째 줄에 바뀐 단어를 출력한다. Str Result Alan Walker #l#n W#lker 나의 풀이 알게 된 것 문제는 단순하게 여러 String 관련 Built-in Method를 유연하게 사용할 수 있는지에 대한 물음인 것 같았다. Argument…","html":"<h2 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h2>\n<p>대문자로 이루어진 영어단어가 입력되면 단어에 포함된 ‘A’를 모두 ’#‘으로 바꾸어 출력하는 프로그램을 작성하세요.</p>\n<h2 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h2>\n<p>▣ 입력설명</p>\n<p>첫 번째 줄에 문자열이 입력된다.</p>\n<p>▣ 출력설명</p>\n<p>첫 번째 줄에 바뀐 단어를 출력한다.</p>\n<table>\n<thead>\n<tr>\n<th>Str</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Alan Walker</td>\n<td>#l#n W#lker</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"나의-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\" aria-label=\"나의 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Alan Walker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// #l#n W#lker</span></code></pre></div>\n<h2 id=\"알게-된-것\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B2%8C-%EB%90%9C-%EA%B2%83\" aria-label=\"알게 된 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알게 된 것</h2>\n<ol>\n<li>문제는 단순하게 여러 String 관련 Built-in Method를 유연하게 사용할 수 있는지에 대한 물음인 것 같았다.</li>\n<li>Argument로 전달 받는 문자열에 같은 알파벳의 대소문자에 따라 다른 결과가 나올 수 있어 toLowerCase() 메서드를 통해 문자열 모두 소문자로 변경하고, 삼항 연산자를 통해 전달 받은 문자열에 a가 있을 경우 replaceAll 메서드를 통해 모두 ’#‘로 변경 후 해당 결과를 반환하여 해결 하였다.</li>\n<li><code class=\"language-text\">String.prototype.contains()</code>은 제거되었으며, 현재는 오직 <code class=\"language-text\">String.prototype.includes()</code>만 사용할 수 있다고 한다.</li>\n</ol>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/includes</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll</a></li>\n</ul>\n<hr>","frontmatter":{"title":"[JSAPS]Foundation. 모든 A를 #으로!!!","date":"July 15, 2021"}}},"pageContext":{"slug":"/JSAPS-210715-2/","previous":{"fields":{"slug":"/JSAPS-210715-1/"},"frontmatter":{"title":"[JSAPS]Foundation. 일곱 난쟁이와 가짜 난쟁이","category":"JSAPS","draft":false}},"next":{"fields":{"slug":"/JSAPS-210715-3/"},"frontmatter":{"title":"[JSAPS]Foundation. 문자를 찾아라!!","category":"JSAPS","draft":false}}}},"staticQueryHashes":["3128451518","3442803692"]}